1. Что такое тестирование программного обеспечения?
Ответ: Процесс исследования ПО на предмет соответствия фактического и ожидаемого результата.
2. Что такое качество программного обеспечения?
Ответ: Степень, с которой рабочий продукт удовлетворяет заявленным и подразумеваемым потребностям заинтересованных сторон.
3. Когда начинать и заканчивать тестирование?
Ответ: Начинать - чем раньше, тем лучше. Заканчивать - когда продолжать тестирование является нецелесообразным. 
4. Какие знаете цели тестирования программного обеспечения?
Ответ: Предоставить объективную оценку о качестве продукта.
5. Quality Assurance- это?
Ответ: QA - решает глобальные задачи. Планирует и оптимизирует процессы, создает WF, анализирует работу тестировщиков и QC, решает возникающие проблемы и предотвращает их появление. Подключается до фактического старта работ.
6. Quality Control - это?
Ответ: QC - контроль качества продукта - анализ результатов тестирования и качества “билдов”, в процессе разработки. QC включается в процесс, когда есть то, что можно проконтролировать. На пример, на этапе анализа требований, составить матрицу трассировки (проверить все ли требования покрыты ТС).
7. Тестирование - это?
Ответ: Testing (тестирование) - прохождение тест кейсов и локализация дефектов. Тестирование начинается на одноименном этапе тестирования, т.е. когда код написан и готов к тестированию.
8. Какие знаете принципы тестирования?
Ответ:  1. Исчерпывающее тестирование невозможно - Полное тестирование с использованием всех входных комбинаций данных, результатов и предусловий физически невыполнимо (исключение — тривиальные случаи).
	2. Тестирование демонстрирует наличие дефектов, а не их отсутствие - Тестирование только снижает вероятность наличия дефектов, которые находятся в программном обеспечении, но не гарантирует их отсутствия.
	3. Заблуждение об отсутствии ошибок - Отсутствие найденных дефектов при тестировании не всегда означает готовность продукта к релизу. Система должна быть удобна пользователю в использовании и удовлетворять его ожиданиям и потребностям.
	4. Раннее тестирование - Следует начинать тестирование на ранних стадиях жизненного цикла разработки ПО, чтобы найти дефекты как можно раньше.
	5. Скопление дефектов - Большая часть дефектов находится в ограниченном количестве модулей.
	6. Тестирование зависит от контекста - Тестирование проводится по-разному в зависимости от контекста. Например, программное обеспечение, в котором критически важна безопасность, тестируется иначе, чем новостной портал.
	7. Парадокс пестицида - Если повторять те же тестовые сценарии снова и снова, в какой-то момент этот набор тестов перестанет выявлять новые дефекты.
9. Что такое верификация?
Ответ: Это статическая проверка документов, дизайна, кода и т.д. Процесс происходит без запуска кода. Отвечает на вопрос - строим ли мы продукт правильно?
10. Что такое валидация?
Ответ: Это процесс оценки конечного продукта, когда необходимо проверить соответствует ли ПО ожиданиям и требованиям клиента. Это динамический процесс который включает в себя запуск кода. Отвечает на вопрос - строим ли мы правильный продукт?
11. Перечислите характеристики качества программного обеспечения и их атрибуты.
Ответ:  1. Функциональные возможности. Атрибуты: 
защищенность – атрибут, который показывает способность ПО предотвращать несанкционированный доступ (случайный или умышленный) к программам и данным;
интероперабельность – атрибут, который показывает возможность взаимодействия данного ПО со специальными системами и средами (операционные системы, вычислительные сети);
функциональная полнота – атрибут, который показывает меру достаточности основных функций для решения задач в соответствии с назначением данного ПО.
	2. Функциональная надежность. Атрибуты:
безошибочность – атрибут, который определяет способность ПО функционировать без ошибок;
правильность – атрибут, который показывает меру достижения правильных результатов;
контролируемость – атрибут, который характеризует полноту и эффективность обнаружения ошибок в промежуточных и выходных результатах
устойчивость к ошибкам — атрибут, который характеризует способность ПО правильно выполнять функции при аномальных условиях (сбой аппаратуры, ошибки в данных и интерфейсах и др.);
безотказность – атрибут, который характеризует способность ПО не вызывать функциональные отказы информационной системы;
пригодность к восстановлению – атрибут, который характеризует способность программы к устранению программной ошибки и к перезапуску для повторного выполнения и восстановления данных в случае функционального отказа;
готовность – атрибут, который показывает способность программы по произвольной заявке безошибочно выполнить предусмотренное преобразование
	3. Удобство применения. Атрибуты:
понимаемость – атрибут, который определяет усилия, затрачиваемые на распознавание логических концепций и условий применения ПО;
изучаемостъ (легкость изучения) – атрибут, который определяет усилия пользователей, направленные на определение применимости ПО путем использования операционного контроля, диагностики, а также процедур, правил и документации;
оперативность – атрибут, который показывает реакцию системы при выполнении операций и операционного контроля.
	4. Эффективность. Атрибуты:
реактивность – атрибут, который показывает время отклика, обработки и выполнения функций;
эффективность ресурсов – атрибут, показывающий количество и продолжительность используемых ресурсов при выполнении функций ПО;
согласованность – атрибут, который показывает соответствие данной характеристики заданным стандартам, правилам и предписаниям.
	5. Сопровождаемость. Атрибуты: 
анализируемость – атрибут, определяющий необходимые усилия для диагностики отказов или идентификации частей, которые будут модифицироваться;
стабильность – атрибут, указывающий на постоянство структуры и риск ее модификации;
тестируемость – атрибут, указывающий на усилия при проведении валидации и верификации с целью обнаружения несоответствий требованиям, а также на необходимость проведения модификации ПО и сертификации;
изменяемость – атрибут, который определяет возможность удаления ошибок в ПО или внесение изменений для их устранения, а также введение новых возможностей в ПО или в среду функционирования.
	6. Переносимость. Атрибуты:
адаптивность – атрибут, определяющий усилия, затрачиваемые на адаптацию к различным средам;
настраиваемость (простота инсталляции) – атрибут, который определяет необходимые усилия для запуска данного ПО в специальной среде;
сосуществование – атрибут, который определяет возможность использования специального ПО в среде действующей системы;
заменяемость – атрибут, который характеризует возможность переноса ПО с одной инструментальной среды в другую с необходимой инсталляцией или адаптацией ПО.